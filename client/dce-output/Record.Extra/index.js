// Generated by purs version 0.13.6
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Record = require("../Record/index.js");
var Record_Builder = require("../Record.Builder/index.js");
var Type_Data_RowList = require("../Type.Data.RowList/index.js");
var MapRecord = function (mapRecordBuilder) {
    this.mapRecordBuilder = mapRecordBuilder;
};
var mapRecordNil = new MapRecord(function (v) {
    return function (v1) {
        return function (v2) {
            return Control_Category.identity(Record_Builder.categoryBuilder);
        };
    };
});
var mapRecordBuilder = function (dict) {
    return dict.mapRecordBuilder;
};
var mapRecordCons = function (dictIsSymbol) {
    return function (dictCons) {
        return function (dictMapRecord) {
            return function (dictLacks) {
                return function (dictCons1) {
                    return new MapRecord(function (v) {
                        return function (f) {
                            return function (r) {
                                var rest = mapRecordBuilder(dictMapRecord)(Type_Data_RowList.RLProxy.value)(f)(r);
                                var val = f(Record.get(dictIsSymbol)()(Data_Symbol.SProxy.value)(r));
                                var first = Record_Builder.insert()()(dictIsSymbol)(Data_Symbol.SProxy.value)(val);
                                return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(first)(rest);
                            };
                        };
                    });
                };
            };
        };
    };
};
var mapRecord = function (dictRowToList) {
    return function (dictMapRecord) {
        return function (f) {
            return function (r) {
                var builder = mapRecordBuilder(dictMapRecord)(Type_Data_RowList.RLProxy.value)(f)(r);
                return Record_Builder.build(builder)({});
            };
        };
    };
};
module.exports = {
    mapRecordBuilder: mapRecordBuilder,
    mapRecord: mapRecord,
    MapRecord: MapRecord,
    mapRecordCons: mapRecordCons,
    mapRecordNil: mapRecordNil
};
